#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        shift_space_caps: shift_space_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "shift_space_caps";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT SPACE>, <&caps_word>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "shift_caps";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    scroll_left_right_encoder: scroll_left_right_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <24 25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        layer_2 {
            bindings = <&mo 2>;
            key-positions = <44 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Gallium";
            bindings = <
&none  &kp B  &kp L  &kp D                  &kp W      &kp Z                                             &kp UP                       &kp J      &kp Y            &kp O      &kp U     &kp COMMA   &none
&none  &kp N  &kp R  &kp T                  &kp S      &kp G                                   &kp LEFT  &kp C_PLAY_PAUSE  &kp RIGHT  &kp P      &kp H            &kp A      &kp E     &kp I       &none
&none  &kp X  &kp Q  &kp M                  &kp C      &kp V                     &kp C_MUTE              &kp DOWN                     &kp K      &kp F            &kp APOS   &kp SEMI  &kp PERIOD  &none
                     &mt LEFT_ALT LEFT_GUI  &kp SPACE  &shift_caps LEFT_SHIFT 0                                                       &lt 3 ESC  &lt 1 BACKSPACE  &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "Number";
            bindings = <
&trans  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                             &mmv MOVE_UP                     &kp HOME       &kp END           &kp UP             &kp BACKSPACE  &kp DELETE     &trans
&trans  &kp N6     &kp N7     &kp N8     &kp N9     &kp N0             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PAGE_UP    &kp LEFT          &kp DOWN           &kp RIGHT      &kp RCTRL      &trans
&trans  &kp SLASH  &kp ASTRK  &kp MINUS  &kp PLUS   &kp DOT  &trans                    &mmv MOVE_DOWN                   &kp PAGE_DOWN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans         &kp RIGHT_GUI  &trans
                              &trans     &kp EQUAL  &trans                                                              &trans         &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Layer_2 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4     &kp F5                          &trans          &bt BT_CLR_ALL   &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9     &kp F10                 &trans  &trans  &trans  &bl BL_TOG       &bl BL_INC    &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans
&trans  &kp F11  &kp F12  &trans  &soft_off  &out OUT_TOG  &trans            &trans          &rgb_ug RGB_TOG  &bl BL_DEC    &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
                          &trans  &trans     &trans                                          &trans           &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans                      &trans          &trans          &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5            &trans  &trans  &trans  &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &mkp MB4  &trans            &trans          &msc SCRL_DOWN  &trans          &trans          &trans           &trans  &trans
                           &trans     &trans     &trans                                      &trans          &trans          &trans
            >;

            sensor-bindings = <&scroll_left_right_encoder>;
        };
    };
};
